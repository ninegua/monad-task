name:         monad-task
version:      0.1.0
homepage:     http://github.com/ninegua/monad-task
author:       Paul Liu
maintainer:   Paul Liu <paul@thev.net>
stability:    experimental
category:     Control
cabal-version: >= 1.6
build-type:   Simple
synopsis:     A monad transformer that turns event processing into co-routine programming.
description:
    Task monad transformer can help refactor event and callback 
    heavy programs into monads via co-routines. The idea is loosely
    based on /Combining Events And Threads For Scalable Network Services/,
    by Peng Li and Steve Zdancewic, in /PLDI/, 2007.
    (<http://www.cis.upenn.edu/~stevez/papers/abstracts.html#LZ07>), but 
    with deterministic and co-operative lightweight threads, also known as 
    co-routines, so that the base monad can be anything ranging from IO 
    to state monads, or your favorite monad transformer stack.
license:      BSD3
license-file: LICENSE

extra-source-files: 
  README.md

source-repository head
  type: git
  location: git://github.com/ninegua/monad-task.git

Library
  exposed-modules:
    Control.Monad.Task
    Control.Monad.Task.Class
    Control.Monad.Trans.Task
  build-depends: base < 6, mtl == 2.*, transformers < 0.4
  extensions:
  ghc-options: -Wall -fno-warn-unused-imports
